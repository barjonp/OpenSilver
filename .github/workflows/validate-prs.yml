name: OpenSilver Validate PRs
env:
  actual-version: '1.1.0'
  # Use a version number that is not available on nuget.org or myget.org to make sure we restore 
  # the package we just built.
  temp-compiler-version: '0.0.1'
on:
  # Any pull request to develop
  workflow_dispatch:
  pull_request:
    branches:
      - develop
jobs:
  OpenSilver-Build:
    runs-on: windows-latest
    steps:
      - uses: microsoft/setup-msbuild@v1.1
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.100'
      - name: Clone OpenSilver repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Restore teamdev.licenses
        run: 'echo "FAKE TEAMDEV LICENSE TO PREVENT BUILDING ERROR. WE DO NOT USE REAL FOR PULL REQUESTS" > ./src/Simulator/Simulator/teamdev.licenses'
        shell: bash
      - name: Build Compiler NuGet package
        working-directory: build/BatFiles
        run: ./Build_Compiler.bat ${{ env.temp-compiler-version }}
      - name: Update Compiler NuGet package in OpenSilver.sln
        working-directory: src
        run: |
          foreach ($project in dotnet sln OpenSilver.sln list | Select-Object -Skip 2) {
            dotnet remove $project package OpenSilver.Compiler
            if ($?) {
              dotnet add $project package OpenSilver.Compiler -v ${{ env.temp-compiler-version }} -s ../build/output/OpenSilver -n
            }
          }
          exit 0
      - name: Build OpenSilver.sln - SL Configuration
        run: msbuild src/OpenSilver.sln -p:Configuration=SL -clp:ErrorsOnly -restore
      - name: Run Runtime Unit Tests - SL Configuration
        run: dotnet test src/Tests/Runtime.OpenSilver.Tests/bin/SL/net472/Runtime.OpenSilver.Tests.dll
      - name: Build OpenSilver.sln - UWP Configuration
        run: msbuild src/OpenSilver.sln -p:Configuration=UWP -clp:ErrorsOnly -restore
      - name: Run Runtime Unit Tests - UWP Configuration
        run: dotnet test src/Tests/Runtime.OpenSilver.Tests/bin/UWP/net472/Runtime.OpenSilver.Tests.dll
      - name: Run Analyzers Unit Tests
        run: dotnet test src/Analyzers/NotImplemented.Tests/bin/Debug/net472/OpenSilver.Analyzers.Tests.dll
      # Disable TestApplication related steps until the TestApplication uses the new packages
      # There is the TestApplication for SL version in the Solution, so we need to build the latest SL package
      # - name: Replace existing package with actual one
      #   run: |
      #     Remove-Item -Path "$($env:USERPROFILE)\.nuget\packages\OpenSilver\${{ env.actual-version }}" -Force -Recurse
      #     dotnet add src\Tests\TestApplication\TestApplication.OpenSilver.Browser\TestApplication.OpenSilver.Browser.csproj package OpenSilver -v ${{ env.actual-version }} -s "$(Get-Location)\build\output\OpenSilver"
      # - name: Verify Building of TestApplication
      #   run: msbuild src/Tests/TestApplication/TestApplication.OpenSilver.sln -p:Configuration=Release -clp:ErrorsOnly -restore